CORRECT:

original: 
crossings:
  0: {'i': 2, 'j': 3, 'k': 0}
  1: {'i': 3, 'j': 0, 'k': 1}
  2: {'i': 0, 'j': 1, 'k': 2}
  3: {'i': 1, 'j': 2, 'k': 3}
neighbors:
  0: {'i0': 2, 'i1': 3, 'j': 1, 'k': 2}
  1: {'i0': 3, 'i1': 0, 'j': 2, 'k': 3}
  2: {'i0': 0, 'i1': 1, 'j': 3, 'k': 0}
  3: {'i0': 1, 'i1': 2, 'j': 0, 'k': 1}
Handedness: ['left', 'right', 'left', 'right']
Unknots: 0

After swapping 0
crossings:
  0: {'i': 3, 'j': 0, 'k': 2}
  1: {'i': 3, 'j': 3, 'k': 1}
  2: {'i': 3, 'j': 1, 'k': 0}
  3: {'i': 1, 'j': 2, 'k': 3}
neighbors:
  0: {'i0': 1, 'i1': 2, 'j': 2, 'k': 3}
  1: {'i0': 3, 'i1': 0, 'j': 2, 'k': 3}
  2: {'i0': 0, 'i1': 1, 'j': 3, 'k': 0}
  3: {'i0': 1, 'i1': 2, 'j': 0, 'k': 1}
Handedness: ['right', 'right', 'left', 'right']
Unknots: 0
Reduction #0
  - Remove 0
  - Remove 2
  - Remove 1
Reduction #1
  - Remove 3
Reduction #2
 - nothing, all done

After reducing
crossings:
  0: None
  1: None
  2: None
  3: None
neighbors:
  0: None
  1: None
  2: None
  3: None
Handedness: [None, None, None, None]
Unknots: 1


------------------

print("original: ")
    printStuff()

    # test swap crossings
    swap = 0
    myKnot.swapCrossing(swap)
    print("\nAfter swapping {}".format(swap))
    printStuff()

    # test reduce
    myKnot.reduceR1s()
    print("\nAfter reducing")
    printStuff()