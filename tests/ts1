CORRECT:

original: 
crossings:
  0: {'i': 2, 'j': 3, 'k': 0}
  1: {'i': 3, 'j': 0, 'k': 1}
  2: {'i': 0, 'j': 1, 'k': 2}
  3: {'i': 1, 'j': 2, 'k': 3}
neighbors:
  0: {'i0': 2, 'i1': 3, 'j': 1, 'k': 2}
  1: {'i0': 3, 'i1': 0, 'j': 2, 'k': 3}
  2: {'i0': 0, 'i1': 1, 'j': 3, 'k': 0}
  3: {'i0': 1, 'i1': 2, 'j': 0, 'k': 1}
Handedness: ['left', 'right', 'left', 'right']  
Unknots: 0

Getting an R1 should be None: (None, None, None)

After swapping 0
crossings:
  0: {'i': 3, 'j': 0, 'k': 2}
  1: {'i': 3, 'j': 3, 'k': 1}
  2: {'i': 3, 'j': 1, 'k': 0}
  3: {'i': 1, 'j': 2, 'k': 3}
neighbors:
  0: {'i0': 1, 'i1': 2, 'j': 2, 'k': 3}
  1: {'i0': 3, 'i1': 0, 'j': 2, 'k': 3}
  2: {'i0': 0, 'i1': 1, 'j': 3, 'k': 0}
  3: {'i0': 1, 'i1': 2, 'j': 0, 'k': 1}
Handedness: ['right', 'right', 'left', 'right']
Unknots: 0

Getting an R1 should be (1, [0, 2], 'i1', 'over'): (1, [0, 2], 'i1', 'over')

After removing 0
crossings:
  0: None
  1: {'i': 3, 'j': 3, 'k': 1}
  2: {'i': 3, 'j': 1, 'k': 0}
  3: {'i': 1, 'j': 0, 'k': 3}
neighbors:
  0: None
  1: {'i0': 3, 'i1': 2, 'j': 2, 'k': 3}
  2: {'i0': 1, 'i1': 1, 'j': 3, 'k': 3}
  3: {'i0': 1, 'i1': 2, 'j': 2, 'k': 1}
Handedness: [None, 'right', 'left', 'right']
Unknots: 0

After removing 2
crossings:
  0: None
  1: {'i': 3, 'j': 3, 'k': 1}
  2: None
  3: {'i': 1, 'j': 1, 'k': 3}
neighbors:
  0: None
  1: {'i0': 3, 'i1': 1, 'j': 1, 'k': 3}
  2: None
  3: {'i0': 1, 'i1': 3, 'j': 3, 'k': 1}
Handedness: [None, 'right', None, 'right']
Unknots: 0

Getting an R1 should be (1, [], 'over'): (1, [], 'over')

After removing 1
crossings:
  0: None
  1: None
  2: None
  3: {'i': 3, 'j': 3, 'k': 3}
neighbors:
  0: None
  1: None
  2: None
  3: {'i0': 3, 'i1': 3, 'j': 3, 'k': 3}
Handedness: [None, None, None, 'right']
Unknots: 0

Getting an R1 should be (3, [], 'over'): (3, [], 'over')

After removing 3
crossings:
  0: None
  1: None
  2: None
  3: None
neighbors:
  0: None
  1: None
  2: None
  3: None
Handedness: [None, None, None, None]
Unknots: 1

Getting an R1 should be None: (None, None, None)



---------

print("original: ")
    printStuff()

    print("\nGetting an R1 should be None: {}".format(myKnot.getR1Crossing()))

    # test swap crossings
    swap = 0
    myKnot.swapCrossing(swap)
    print("\nAfter swapping {}".format(swap))
    printStuff()

    print("\nGetting an R1 should be (1, [0, 2], 'i1', 'over'): {}".format(myKnot.getR1Crossing()))

    # test removal
    remove = 0
    myKnot.removeCrossing(remove)
    print("\nAfter removing {}".format(remove))
    printStuff()

    # test removal
    remove = 2
    myKnot.removeCrossing(remove)
    print("\nAfter removing {}".format(remove))
    printStuff()

    print("\nGetting an R1 should be (1, [], 'over'): {}".format(myKnot.getR1Crossing()))

    # test removal
    remove = 1
    myKnot.removeCrossing(remove)
    print("\nAfter removing {}".format(remove))
    printStuff()

    print("\nGetting an R1 should be (3, [], 'over'): {}".format(myKnot.getR1Crossing()))

    # test removal
    remove = 3
    myKnot.removeCrossing(remove)
    print("\nAfter removing {}".format(remove))
    printStuff()

    print("\nGetting an R1 should be None: {}".format(myKnot.getR1Crossing()))